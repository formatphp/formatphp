{
    "name": "formatphp/formatphp",
    "description": "Internationalize PHP apps. This library provides an API to format dates, numbers, and strings, including pluralization and handling translations.",
    "license": "MIT",
    "type": "library",
    "keywords": [
        "intl",
        "i18n",
        "internationalization",
        "locale",
        "localization",
        "globalization",
        "format",
        "formatting",
        "translate",
        "translation"
    ],
    "require": {
        "php": "^7.4 || ^8",
        "ext-intl": "*",
        "ext-json": "*",
        "ext-mbstring": "*",
        "myclabs/php-enum": "^1.8.4",
        "nikic/php-parser": "^5.4",
        "psr/log": "^1 || ^2",
        "ramsey/collection": "^1.2",
        "symfony/console": "^5.3 || ^6.0",
        "symfony/polyfill-php80": "^1.23",
        "symfony/process": "^5 || ^6.0",
        "webmozart/glob": "^4.4"
    },
    "require-dev": {
        "captainhook/captainhook": "^5.25",
        "captainhook/plugin-composer": "^5.3",
        "ergebnis/composer-normalize": "^2.47",
        "hamcrest/hamcrest-php": "^2.1",
        "mdwheele/zalgo": "^0.3.1",
        "mockery/mockery": "^1.6.6",
        "myclabs/deep-copy": "^1.13",
        "php-parallel-lint/php-console-highlighter": "^1.0",
        "php-parallel-lint/php-parallel-lint": "^1.4",
        "phpstan/extension-installer": "^1.4",
        "phpstan/phpstan": "^2.1",
        "phpstan/phpstan-mockery": "^2.0",
        "phpstan/phpstan-phpunit": "^2.0",
        "phpunit/phpunit": "^11.5",
        "ramsey/coding-standard": "^2.3",
        "ramsey/composer-repl": "^1.5",
        "ramsey/conventional-commits": "^1.6",
        "roave/security-advisories": "dev-latest",
        "spatie/phpunit-snapshot-assertions": "^5.2"
    },
    "replace": {
        "skillshare/formatphp": "<=1.0.2"
    },
    "suggest": {
        "mdwheele/zalgo": "Zalgo commands you install mdwheele/zalgo for Zalgo pseudo-locale support!"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "FormatPHP\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "FormatPHP\\Test\\": "tests/"
        }
    },
    "bin": [
        "bin/formatphp"
    ],
    "config": {
        "allow-plugins": {
            "captainhook/plugin-composer": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "ergebnis/composer-normalize": true,
            "phpstan/extension-installer": true,
            "ramsey/composer-repl": true
        },
        "sort-packages": true
    },
    "extra": {
        "captainhook": {
            "force-install": true
        },
        "ramsey/conventional-commits": {
            "configFile": "conventional-commits.json"
        }
    },
    "scripts": {
        "dev:analyze": [
            "@dev:analyze:phpstan"
        ],
        "dev:analyze:phpstan": "phpstan analyse --ansi --memory-limit='-1'",
        "dev:build:clean": "git clean -fX build/",
        "dev:lint": [
            "@dev:lint:syntax",
            "@dev:lint:style"
        ],
        "dev:lint:fix": "phpcbf",
        "dev:lint:style": "phpcs --colors",
        "dev:lint:syntax": "parallel-lint --colors src/ tests/",
        "dev:test": [
            "@dev:lint",
            "@dev:analyze",
            "@dev:test:unit"
        ],
        "dev:test:coverage:ci": "phpunit --colors=always --coverage-text --coverage-clover build/coverage/clover.xml --coverage-cobertura build/coverage/cobertura.xml --coverage-crap4j build/coverage/crap4j.xml --coverage-xml build/coverage/coverage-xml --log-junit build/junit.xml",
        "dev:test:coverage:html": "phpunit --colors=always --coverage-html build/coverage/coverage-html/",
        "dev:test:unit": "phpunit --colors=always",
        "test": "@dev:test"
    },
    "scripts-descriptions": {
        "dev:analyze": "Runs all static analysis checks.",
        "dev:analyze:phpstan": "Runs the PHPStan static analyzer.",
        "dev:build:clean": "Cleans the build/ directory.",
        "dev:lint": "Runs all linting checks.",
        "dev:lint:fix": "Auto-fixes coding standards issues, if possible.",
        "dev:lint:style": "Checks for coding standards issues.",
        "dev:lint:syntax": "Checks for syntax errors.",
        "dev:test": "Runs linting, static analysis, and unit tests.",
        "dev:test:coverage:ci": "Runs unit tests and generates CI coverage reports.",
        "dev:test:coverage:html": "Runs unit tests and generates HTML coverage report.",
        "dev:test:unit": "Runs unit tests.",
        "test": "Runs linting, static analysis, and unit tests."
    }
}
